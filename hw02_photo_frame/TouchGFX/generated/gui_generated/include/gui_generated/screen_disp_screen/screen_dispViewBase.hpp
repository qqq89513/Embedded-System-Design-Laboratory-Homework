/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_DISPVIEWBASE_HPP
#define SCREEN_DISPVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_disp_screen/screen_dispPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class screen_dispViewBase : public touchgfx::View<screen_dispPresenter>
{
public:
    screen_dispViewBase();
    virtual ~screen_dispViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TextAreaWithOneWildcard txt_debug;
    touchgfx::ClickListener< touchgfx::Container > container_img;
    touchgfx::ScalableImage img_disp;
    touchgfx::Button btn_back;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_dispViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN_DISPVIEWBASE_HPP
