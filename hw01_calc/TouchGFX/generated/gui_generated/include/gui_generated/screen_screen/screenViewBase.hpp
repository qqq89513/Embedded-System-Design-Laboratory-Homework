/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENVIEWBASE_HPP
#define SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_screen/screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class screenViewBase : public touchgfx::View<screenPresenter>
{
public:
    screenViewBase();
    virtual ~screenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btn_equal_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_clear_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_plus_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_minus_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_multiply_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_devide_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_dot_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_0_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_1_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_2_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_3_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_4_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_5_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_6_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_7_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_8_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_9_onclick()
    {
        // Override and implement this function in screen
    }

    virtual void btn_00_onclick()
    {
        // Override and implement this function in screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TextArea txt_result;
    touchgfx::TextArea txt_debug;
    touchgfx::Container container_btns;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_00;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_0;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_5;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_6;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_7;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_8;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_9;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_dot;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_clear;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_equal;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_devide;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_multiply;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_minus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > btn_plus;
    touchgfx::Container container_txts;
    touchgfx::TextArea btn_txt_00;
    touchgfx::TextArea btn_txt_0;
    touchgfx::TextArea btn_txt_1;
    touchgfx::TextArea btn_txt_2;
    touchgfx::TextArea btn_txt_3;
    touchgfx::TextArea btn_txt_4;
    touchgfx::TextArea btn_txt_5;
    touchgfx::TextArea btn_txt_6;
    touchgfx::TextArea btn_txt_7;
    touchgfx::TextArea btn_txt_8;
    touchgfx::TextArea btn_txt_9;
    touchgfx::TextArea btn_txt_dot;
    touchgfx::TextArea btn_txt_clear;
    touchgfx::TextArea btn_txt_equal;
    touchgfx::TextArea btn_txt_devide;
    touchgfx::TextArea btn_txt_multiply;
    touchgfx::TextArea btn_txt_minus;
    touchgfx::TextArea btn_txt_plus;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREENVIEWBASE_HPP
